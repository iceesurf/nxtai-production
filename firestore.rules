rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar autenticação
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Função para verificar se usuário pertence ao tenant
    function belongsToTenant(tenantId) {
      return isAuthenticated() && 
             request.auth.token.tenantId == tenantId;
    }
    
    // Função para verificar roles
    function hasRole(role) {
      return isAuthenticated() && 
             role in request.auth.token.roles;
    }
    
    // Função para verificar se é admin
    function isAdmin() {
      return hasRole('admin');
    }
    
    // Função para verificar se é editor ou admin
    function canEdit() {
      return hasRole('editor') || hasRole('admin');
    }
    
    // Regras para usuários
    match /users/{userId} {
      allow read: if isAuthenticated() && 
                     (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && 
                      (request.auth.uid == userId || isAdmin());
    }
    
    // Regras para tenants
    match /tenants/{tenantId} {
      allow read: if belongsToTenant(tenantId);
      allow write: if belongsToTenant(tenantId) && isAdmin();
    }
    
    // Regras para leads
    match /leads/{leadId} {
      allow read: if isAuthenticated() && 
                     (belongsToTenant(resource.data.tenantId) || 
                      resource.data.tenantId == 'default');
      allow create: if isAuthenticated() && 
                       (request.resource.data.tenantId == request.auth.token.tenantId ||
                        request.resource.data.tenantId == 'default');
      allow update: if isAuthenticated() && 
                       canEdit() && 
                       (belongsToTenant(resource.data.tenantId) ||
                        resource.data.tenantId == 'default');
      allow delete: if isAuthenticated() && 
                       isAdmin() && 
                       belongsToTenant(resource.data.tenantId);
    }
    
    // Regras para conversas
    match /conversations/{conversationId} {
      allow read: if isAuthenticated() && 
                     (belongsToTenant(resource.data.tenantId) ||
                      resource.data.tenantId == 'default');
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
                       (belongsToTenant(resource.data.tenantId) ||
                        resource.data.tenantId == 'default');
      allow delete: if isAuthenticated() && 
                       isAdmin() && 
                       belongsToTenant(resource.data.tenantId);
    }
    
    // Regras para campanhas
    match /campaigns/{campaignId} {
      allow read: if isAuthenticated() && 
                     belongsToTenant(resource.data.tenantId);
      allow create: if isAuthenticated() && 
                       canEdit() && 
                       request.resource.data.tenantId == request.auth.token.tenantId;
      allow update: if isAuthenticated() && 
                       canEdit() && 
                       belongsToTenant(resource.data.tenantId);
      allow delete: if isAuthenticated() && 
                       isAdmin() && 
                       belongsToTenant(resource.data.tenantId);
    }
    
    // Regras para analytics (somente leitura para usuários com role apropriada)
    match /analytics/{document=**} {
      allow read: if isAuthenticated() && (hasRole('analytics') || isAdmin());
      allow write: if false; // Apenas Cloud Functions podem escrever
    }
    
    // Regras para métricas (somente leitura)
    match /metrics/{document=**} {
      allow read: if isAuthenticated();
      allow write: if false; // Apenas Cloud Functions podem escrever
    }
    
    // Regras para relatórios
    match /reports/{reportId} {
      allow read: if isAuthenticated();
      allow write: if false; // Apenas Cloud Functions podem escrever
    }
    
    // Regras para configurações
    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // Regras para mensagens processadas (controle de duplicação)
    match /processed_messages/{messageId} {
      allow read: if false; // Apenas Cloud Functions precisam ler
      allow write: if false; // Apenas Cloud Functions podem escrever
    }
    
    // Permitir que qualquer usuário autenticado acesse templates
    match /templates/{templateId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && canEdit();
    }
  }
}